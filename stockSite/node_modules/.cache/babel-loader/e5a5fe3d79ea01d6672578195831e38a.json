{"ast":null,"code":"var _jsxFileName = \"/Users/claire/Documents/dataVisSite/clarisso/src/pages/events.js\";\nimport React, { Component, useState } from 'react';\n/*const locale = 'en';\nconst [today, setDate] = React.useState(new Date());\nReact.useEffect(() => {\nconst timer = setInterval(() => { // Creates an interval which will update the current data every minute\n// This will trigger a rerender every component that uses the useDate hook.\nsetDate(new Date());\n}, 60 * 1000);\nreturn () => {\nclearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n}\n}, []);*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Events extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTime = () => {\n      this.setState({\n        date: new Date().toLocaleTimeString('en', {\n          hour: 'numeric',\n          hour12: true,\n          minute: 'numeric'\n        })\n      });\n    };\n\n    this.state = {\n      date: new Date().toLocaleTimeString('en', {\n        hour: 'numeric',\n        hour12: true,\n        minute: 'numeric'\n      }),\n      task: {\n        a: props.a,\n        b: props.b,\n        c: props.c\n      },\n      count: 1\n    };\n  }\n\n  updateTaskA(event) {\n    var taskA = this.state.task;\n    taskA.a = event.target.value;\n    this.setState({\n      task: taskA\n    });\n  }\n\n  onSubmit(event) {\n    var taskA = this.state.task;\n    alert(taskA.a);\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"hi\", taskA.a]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this);\n  }\n  /*launchClock =()=> {\n  \tsetInterval(()=>{\n  \t  console.log('Updating time...')\n  \t  this.setState({\n  \t\tdate: (new Date()).toLocaleString()          \n  \t  })\n  \t}, 1000)                                                \n  }*/\n\n\n  render() {\n    setInterval(this.updateTime, 1000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'start',\n        flexDirection: 'column',\n        // make the next line go down instead of left to right\n        alignItems: 'Center',\n        height: '100vh',\n        paddingLeft: 20,\n        paddingTop: 190,\n        fontSize: 14\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: 80,\n          display: 'flex',\n          justifyContent: 'Left',\n          alignItems: 'Left',\n          height: '6vh'\n        } //{today.toLocaleTimeString(locale, { hour: 'numeric', hour12: true, minute: 'numeric' })}\n        ,\n        children: [\" \", this.state.date, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"what are your tasks for today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'Center',\n          flexDirection: 'column',\n          alignItems: 'Center',\n          height: '0rem',\n          paddingLeft: 20,\n          fontSize: 24\n        },\n        onSubmit: this.onSubmit.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            height: '22px',\n            justifyContent: 'Center',\n            flexDirection: 'column',\n            alignItems: 'Center'\n          },\n          children: [\"task:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              height: '24px',\n              justifyContent: 'Center',\n              alignItems: 'Center',\n              width: '200px'\n            },\n            type: \"text\",\n            text: \"\",\n            value: this.state.task.a,\n            onChange: this.updateTaskA.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              height: '32px',\n              justifyContent: 'Center',\n              alignItems: 'Center',\n              fontSize: 20\n            },\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          paddingTop: '14px'\n        },\n        children: this.state.task.a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 2\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/claire/Documents/dataVisSite/clarisso/src/pages/events.js"],"names":["React","Component","useState","Events","constructor","props","updateTime","setState","date","Date","toLocaleTimeString","hour","hour12","minute","state","task","a","b","c","count","updateTaskA","event","taskA","target","value","onSubmit","alert","render","setInterval","display","justifyContent","flexDirection","alignItems","height","paddingLeft","paddingTop","fontSize","bind","width"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\n/*const locale = 'en';\nconst [today, setDate] = React.useState(new Date());\nReact.useEffect(() => {\nconst timer = setInterval(() => { // Creates an interval which will update the current data every minute\n// This will trigger a rerender every component that uses the useDate hook.\nsetDate(new Date());\n}, 60 * 1000);\nreturn () => {\nclearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n}\n}, []);*/\n\nexport default class Events extends React.Component {\n\n\tconstructor(props) {\n\t  super(props);\n\t  this.state = {\n\t\tdate: (new Date().toLocaleTimeString('en', { hour: 'numeric', hour12: true, minute: 'numeric' })),\n\t\ttask: {\n\t\t  a: props.a,\n\t\t  b: props.b,\n\t\t  c: props.c\n\t\t},\n\t\tcount: 1\n\t  }\n\t}\n\tupdateTime = () =>{\n\t\tthis.setState({\n\t\t\tdate: new Date().toLocaleTimeString('en', { hour: 'numeric', hour12: true, minute: 'numeric' })\n\t\t})\n\t}\n\tupdateTaskA(event){\n\t\tvar taskA = this.state.task;\n\t\ttaskA.a = event.target.value;\n\t\tthis.setState({task:taskA});\n\t}\n\tonSubmit(event){\n\t\tvar taskA = this.state.task;\n\t\talert(taskA.a);\n\t\treturn(\n\t\t\t<h2>hi{taskA.a}</h2>\n\t\t)\n\t\t\n\t}\n\n\t/*launchClock =()=> {\n\t\tsetInterval(()=>{\n\t\t  console.log('Updating time...')\n\t\t  this.setState({\n\t\t\tdate: (new Date()).toLocaleString()          \n\t\t  })\n\t\t}, 1000)                                                \n\t}*/\n\nrender(){\n\tsetInterval(this.updateTime, 1000);\nreturn (\n\t<div\n\tstyle={{\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'start',\n\t\tflexDirection: 'column', // make the next line go down instead of left to right\n\t\talignItems: 'Center',\n\t\theight: '100vh',\n        paddingLeft: 20,\n\t\tpaddingTop:190,\n\t\tfontSize: 14\n\t}}\n\t>\n\t<h1\n\tstyle ={{\n\t\tfontSize:80,\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'Left',\n\t\talignItems: 'Left',\n\t\theight: '6vh',\n\t}}\n\t//{today.toLocaleTimeString(locale, { hour: 'numeric', hour12: true, minute: 'numeric' })}\n\t> {this.state.date} </h1>\n\t<h1>what are your tasks for today?</h1>\n\t\n\t\t<form\n\t\tstyle={{\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'Center',\n\t\t\tflexDirection: 'column',\n\t\t\talignItems: 'Center',\n\t\t\theight: '0rem',\n\t\t\tpaddingLeft: 20,\n\t\t\tfontSize: 24\n\t\t}}\n\t\tonSubmit={this.onSubmit.bind(this)}\n\t\t>\n\t\t\t<label\n\t\t\tstyle={{\n\t\t\t\theight:'22px',\n\t\t\t\tjustifyContent: 'Center',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\talignItems: 'Center',\n\t\t\t}}\n\t\t\t>\n\t\t\t\ttask:\n\t\t\t\n\t\t\t<input \n\t\t\tstyle={{\n\t\t\t\theight:'24px',\n\t\t\t\tjustifyContent: 'Center',\n\t\t\t\talignItems: 'Center',\n\t\t\t\twidth: '200px'\n\t\t\t}}\n\t\t\ttype=\"text\" text=\"\" value = {this.state.task.a}\n\t\t\tonChange={this.updateTaskA.bind(this)}\n\t\t\t>\n\t\t\t</input>\n\t\t\t<input \n\t\t\tstyle={{\n\t\t\t\theight:'32px',\n\t\t\t\tjustifyContent: 'Center',\n\t\t\t\talignItems: 'Center',\n\t\t\t\tfontSize: 20\n\t\t\t}}\n\t\t\ttype=\"submit\" value=\"Submit\">\n\t\t\t</input>\n\t\t\t</label>\n\t\t</form>\n\t<h1\n\tstyle={{\n\t\tpaddingTop: '14px'\n\t}}\n\t>{this.state.task.a}</h1>\n\n</div>\n\t\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}